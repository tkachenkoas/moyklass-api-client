/*
 * API для работы с CRM \"Мой Класс\"
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.moyklass.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * MKAccountSettings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-04-15T19:21:47.202+03:00[Asia/Jerusalem]")
public class MKAccountSettings {
  /**
   * Gets or Sets calendarFields
   */
  @JsonAdapter(CalendarFieldsEnum.Adapter.class)
  public enum CalendarFieldsEnum {
    SUBJECT("subject"),
    
    TEACHERS("teachers"),
    
    ROOMS("rooms"),
    
    FILIALS("filials");

    private String value;

    CalendarFieldsEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CalendarFieldsEnum fromValue(String value) {
      for (CalendarFieldsEnum b : CalendarFieldsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<CalendarFieldsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CalendarFieldsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CalendarFieldsEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return CalendarFieldsEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_CALENDAR_FIELDS = "calendarFields";
  @SerializedName(SERIALIZED_NAME_CALENDAR_FIELDS)
  private List<CalendarFieldsEnum> calendarFields = null;

  /**
   * Масштаб календаря
   */
  @JsonAdapter(CalendarZoomEnum.Adapter.class)
  public enum CalendarZoomEnum {
    SMALL("small"),
    
    MEDIUM("medium"),
    
    LARGE("large");

    private String value;

    CalendarZoomEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CalendarZoomEnum fromValue(String value) {
      for (CalendarZoomEnum b : CalendarZoomEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<CalendarZoomEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CalendarZoomEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CalendarZoomEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return CalendarZoomEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_CALENDAR_ZOOM = "calendarZoom";
  @SerializedName(SERIALIZED_NAME_CALENDAR_ZOOM)
  private CalendarZoomEnum calendarZoom;

  public static final String SERIALIZED_NAME_CALENDAR_START_HOUR = "calendarStartHour";
  @SerializedName(SERIALIZED_NAME_CALENDAR_START_HOUR)
  private Integer calendarStartHour = 9;

  public static final String SERIALIZED_NAME_TRUNCATE_NAMES = "truncateNames";
  @SerializedName(SERIALIZED_NAME_TRUNCATE_NAMES)
  private Boolean truncateNames = false;

  /**
   * Отображение занятий по-умолчанию. *all* - все, *mine* - только ученика
   */
  @JsonAdapter(SearchLessonsDefaultEnum.Adapter.class)
  public enum SearchLessonsDefaultEnum {
    ALL("all"),
    
    MINE("mine");

    private String value;

    SearchLessonsDefaultEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SearchLessonsDefaultEnum fromValue(String value) {
      for (SearchLessonsDefaultEnum b : SearchLessonsDefaultEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SearchLessonsDefaultEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SearchLessonsDefaultEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SearchLessonsDefaultEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SearchLessonsDefaultEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_SEARCH_LESSONS_DEFAULT = "searchLessonsDefault";
  @SerializedName(SERIALIZED_NAME_SEARCH_LESSONS_DEFAULT)
  private SearchLessonsDefaultEnum searchLessonsDefault;

  /**
   * Отображение филиала по-умолчанию *all* - все, *selected* - выбранный филиал из searchFilialId
   */
  @JsonAdapter(SearchFilialsDefaultEnum.Adapter.class)
  public enum SearchFilialsDefaultEnum {
    ALL("all"),
    
    SELECTED("selected");

    private String value;

    SearchFilialsDefaultEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SearchFilialsDefaultEnum fromValue(String value) {
      for (SearchFilialsDefaultEnum b : SearchFilialsDefaultEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SearchFilialsDefaultEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SearchFilialsDefaultEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SearchFilialsDefaultEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SearchFilialsDefaultEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_SEARCH_FILIALS_DEFAULT = "searchFilialsDefault";
  @SerializedName(SERIALIZED_NAME_SEARCH_FILIALS_DEFAULT)
  private SearchFilialsDefaultEnum searchFilialsDefault;

  public static final String SERIALIZED_NAME_SEARCH_FILIAL_ID = "searchFilialId";
  @SerializedName(SERIALIZED_NAME_SEARCH_FILIAL_ID)
  private Integer searchFilialId;


  public MKAccountSettings calendarFields(List<CalendarFieldsEnum> calendarFields) {
    
    this.calendarFields = calendarFields;
    return this;
  }

  public MKAccountSettings addCalendarFieldsItem(CalendarFieldsEnum calendarFieldsItem) {
    if (this.calendarFields == null) {
      this.calendarFields = new ArrayList<>();
    }
    this.calendarFields.add(calendarFieldsItem);
    return this;
  }

   /**
   * Поля, отображаемые в календаре занятий
   * @return calendarFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Поля, отображаемые в календаре занятий")

  public List<CalendarFieldsEnum> getCalendarFields() {
    return calendarFields;
  }


  public void setCalendarFields(List<CalendarFieldsEnum> calendarFields) {
    this.calendarFields = calendarFields;
  }


  public MKAccountSettings calendarZoom(CalendarZoomEnum calendarZoom) {
    
    this.calendarZoom = calendarZoom;
    return this;
  }

   /**
   * Масштаб календаря
   * @return calendarZoom
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Масштаб календаря")

  public CalendarZoomEnum getCalendarZoom() {
    return calendarZoom;
  }


  public void setCalendarZoom(CalendarZoomEnum calendarZoom) {
    this.calendarZoom = calendarZoom;
  }


  public MKAccountSettings calendarStartHour(Integer calendarStartHour) {
    
    this.calendarStartHour = calendarStartHour;
    return this;
  }

   /**
   * Начало дня в календаре
   * @return calendarStartHour
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Начало дня в календаре")

  public Integer getCalendarStartHour() {
    return calendarStartHour;
  }


  public void setCalendarStartHour(Integer calendarStartHour) {
    this.calendarStartHour = calendarStartHour;
  }


  public MKAccountSettings truncateNames(Boolean truncateNames) {
    
    this.truncateNames = truncateNames;
    return this;
  }

   /**
   * Обрезать названия, если не помещаются в одну строку в календаре
   * @return truncateNames
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Обрезать названия, если не помещаются в одну строку в календаре")

  public Boolean getTruncateNames() {
    return truncateNames;
  }


  public void setTruncateNames(Boolean truncateNames) {
    this.truncateNames = truncateNames;
  }


  public MKAccountSettings searchLessonsDefault(SearchLessonsDefaultEnum searchLessonsDefault) {
    
    this.searchLessonsDefault = searchLessonsDefault;
    return this;
  }

   /**
   * Отображение занятий по-умолчанию. *all* - все, *mine* - только ученика
   * @return searchLessonsDefault
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Отображение занятий по-умолчанию. *all* - все, *mine* - только ученика")

  public SearchLessonsDefaultEnum getSearchLessonsDefault() {
    return searchLessonsDefault;
  }


  public void setSearchLessonsDefault(SearchLessonsDefaultEnum searchLessonsDefault) {
    this.searchLessonsDefault = searchLessonsDefault;
  }


  public MKAccountSettings searchFilialsDefault(SearchFilialsDefaultEnum searchFilialsDefault) {
    
    this.searchFilialsDefault = searchFilialsDefault;
    return this;
  }

   /**
   * Отображение филиала по-умолчанию *all* - все, *selected* - выбранный филиал из searchFilialId
   * @return searchFilialsDefault
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Отображение филиала по-умолчанию *all* - все, *selected* - выбранный филиал из searchFilialId")

  public SearchFilialsDefaultEnum getSearchFilialsDefault() {
    return searchFilialsDefault;
  }


  public void setSearchFilialsDefault(SearchFilialsDefaultEnum searchFilialsDefault) {
    this.searchFilialsDefault = searchFilialsDefault;
  }


  public MKAccountSettings searchFilialId(Integer searchFilialId) {
    
    this.searchFilialId = searchFilialId;
    return this;
  }

   /**
   * Филиал для отображения занятий по-умолчанию
   * @return searchFilialId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Филиал для отображения занятий по-умолчанию")

  public Integer getSearchFilialId() {
    return searchFilialId;
  }


  public void setSearchFilialId(Integer searchFilialId) {
    this.searchFilialId = searchFilialId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MKAccountSettings accountSettings = (MKAccountSettings) o;
    return Objects.equals(this.calendarFields, accountSettings.calendarFields) &&
        Objects.equals(this.calendarZoom, accountSettings.calendarZoom) &&
        Objects.equals(this.calendarStartHour, accountSettings.calendarStartHour) &&
        Objects.equals(this.truncateNames, accountSettings.truncateNames) &&
        Objects.equals(this.searchLessonsDefault, accountSettings.searchLessonsDefault) &&
        Objects.equals(this.searchFilialsDefault, accountSettings.searchFilialsDefault) &&
        Objects.equals(this.searchFilialId, accountSettings.searchFilialId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(calendarFields, calendarZoom, calendarStartHour, truncateNames, searchLessonsDefault, searchFilialsDefault, searchFilialId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MKAccountSettings {\n");
    sb.append("    calendarFields: ").append(toIndentedString(calendarFields)).append("\n");
    sb.append("    calendarZoom: ").append(toIndentedString(calendarZoom)).append("\n");
    sb.append("    calendarStartHour: ").append(toIndentedString(calendarStartHour)).append("\n");
    sb.append("    truncateNames: ").append(toIndentedString(truncateNames)).append("\n");
    sb.append("    searchLessonsDefault: ").append(toIndentedString(searchLessonsDefault)).append("\n");
    sb.append("    searchFilialsDefault: ").append(toIndentedString(searchFilialsDefault)).append("\n");
    sb.append("    searchFilialId: ").append(toIndentedString(searchFilialId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

