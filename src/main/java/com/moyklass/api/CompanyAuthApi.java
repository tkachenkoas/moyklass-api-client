/*
 * API для работы с CRM \"Мой Класс\"
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.moyklass.api;

import com.google.gson.reflect.TypeToken;
import com.moyklass.api.invoker.*;
import com.moyklass.api.model.MKAccessToken;
import com.moyklass.api.model.MKKeyAuth;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class CompanyAuthApi {
    private ApiClient localVarApiClient;

    public CompanyAuthApi() {
        this(Configuration.getDefaultApiClient());
    }

    public CompanyAuthApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    /**
     * Build call for v1CompanyAuthGetTokenPost
     * @param mkKeyAuth Параметры авторизации (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Токен доступа </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Ошибка авторизации </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v1CompanyAuthGetTokenPostCall(MKKeyAuth mkKeyAuth, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = mkKeyAuth;

        // create path and map variables
        String localVarPath = "/v1/company/auth/getToken";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call v1CompanyAuthGetTokenPostValidateBeforeCall(MKKeyAuth mkKeyAuth, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'mkKeyAuth' is set
        if (mkKeyAuth == null) {
            throw new ApiException("Missing the required parameter 'mkKeyAuth' when calling v1CompanyAuthGetTokenPost(Async)");
        }
        

        okhttp3.Call localVarCall = v1CompanyAuthGetTokenPostCall(mkKeyAuth, _callback);
        return localVarCall;

    }

    /**
     * Получение токена
     * Авторизация. Получение токена для работы с API. Ключи API вы можете создавать и просматривать в разделе CRM [\&quot;Мой Класс\&quot; - \&quot;Настройки - API\&quot;](https://app.moyklass.com/settings/settings/api).  [Подробнее](https://help.moyklass.com/hc/ru/articles/360027261934-%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0-%D1%81-API). 
     * @param mkKeyAuth Параметры авторизации (required)
     * @return MKAccessToken
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Токен доступа </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Ошибка авторизации </td><td>  -  </td></tr>
     </table>
     */
    public MKAccessToken v1CompanyAuthGetTokenPost(MKKeyAuth mkKeyAuth) throws ApiException {
        ApiResponse<MKAccessToken> localVarResp = v1CompanyAuthGetTokenPostWithHttpInfo(mkKeyAuth);
        return localVarResp.getData();
    }

    /**
     * Получение токена
     * Авторизация. Получение токена для работы с API. Ключи API вы можете создавать и просматривать в разделе CRM [\&quot;Мой Класс\&quot; - \&quot;Настройки - API\&quot;](https://app.moyklass.com/settings/settings/api).  [Подробнее](https://help.moyklass.com/hc/ru/articles/360027261934-%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0-%D1%81-API). 
     * @param mkKeyAuth Параметры авторизации (required)
     * @return ApiResponse&lt;MKAccessToken&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Токен доступа </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Ошибка авторизации </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<MKAccessToken> v1CompanyAuthGetTokenPostWithHttpInfo(MKKeyAuth mkKeyAuth) throws ApiException {
        okhttp3.Call localVarCall = v1CompanyAuthGetTokenPostValidateBeforeCall(mkKeyAuth, null);
        Type localVarReturnType = new TypeToken<MKAccessToken>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Получение токена (asynchronously)
     * Авторизация. Получение токена для работы с API. Ключи API вы можете создавать и просматривать в разделе CRM [\&quot;Мой Класс\&quot; - \&quot;Настройки - API\&quot;](https://app.moyklass.com/settings/settings/api).  [Подробнее](https://help.moyklass.com/hc/ru/articles/360027261934-%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0-%D1%81-API). 
     * @param mkKeyAuth Параметры авторизации (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Токен доступа </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Ошибка авторизации </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v1CompanyAuthGetTokenPostAsync(MKKeyAuth mkKeyAuth, final ApiCallback<MKAccessToken> _callback) throws ApiException {

        okhttp3.Call localVarCall = v1CompanyAuthGetTokenPostValidateBeforeCall(mkKeyAuth, _callback);
        Type localVarReturnType = new TypeToken<MKAccessToken>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for v1CompanyAuthRefreshTokenPost
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Новый токен доступа </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Ошибка авторизации </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v1CompanyAuthRefreshTokenPostCall(final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/company/auth/refreshToken";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "companyApiKey" };
        return localVarApiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call v1CompanyAuthRefreshTokenPostValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = v1CompanyAuthRefreshTokenPostCall(_callback);
        return localVarCall;

    }

    /**
     * Обновление токена
     * Генерирует новый токен, текущий токен при этом продолжает действовать.
     * @return MKAccessToken
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Новый токен доступа </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Ошибка авторизации </td><td>  -  </td></tr>
     </table>
     */
    public MKAccessToken v1CompanyAuthRefreshTokenPost() throws ApiException {
        ApiResponse<MKAccessToken> localVarResp = v1CompanyAuthRefreshTokenPostWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * Обновление токена
     * Генерирует новый токен, текущий токен при этом продолжает действовать.
     * @return ApiResponse&lt;MKAccessToken&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Новый токен доступа </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Ошибка авторизации </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<MKAccessToken> v1CompanyAuthRefreshTokenPostWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = v1CompanyAuthRefreshTokenPostValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<MKAccessToken>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Обновление токена (asynchronously)
     * Генерирует новый токен, текущий токен при этом продолжает действовать.
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Новый токен доступа </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Ошибка авторизации </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v1CompanyAuthRefreshTokenPostAsync(final ApiCallback<MKAccessToken> _callback) throws ApiException {

        okhttp3.Call localVarCall = v1CompanyAuthRefreshTokenPostValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<MKAccessToken>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for v1CompanyAuthRevokeTokenPost
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> Токен удален </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Ошибка авторизации </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v1CompanyAuthRevokeTokenPostCall(final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/company/auth/revokeToken";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "companyApiKey" };
        return localVarApiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call v1CompanyAuthRevokeTokenPostValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = v1CompanyAuthRevokeTokenPostCall(_callback);
        return localVarCall;

    }

    /**
     * Удаление токена
     * Удаляет существующий токен. Токен передается в заголовке **x-access-token**
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> Токен удален </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Ошибка авторизации </td><td>  -  </td></tr>
     </table>
     */
    public void v1CompanyAuthRevokeTokenPost() throws ApiException {
        v1CompanyAuthRevokeTokenPostWithHttpInfo();
    }

    /**
     * Удаление токена
     * Удаляет существующий токен. Токен передается в заголовке **x-access-token**
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> Токен удален </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Ошибка авторизации </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> v1CompanyAuthRevokeTokenPostWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = v1CompanyAuthRevokeTokenPostValidateBeforeCall(null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Удаление токена (asynchronously)
     * Удаляет существующий токен. Токен передается в заголовке **x-access-token**
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> Токен удален </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Ошибка авторизации </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v1CompanyAuthRevokeTokenPostAsync(final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = v1CompanyAuthRevokeTokenPostValidateBeforeCall(_callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
}
